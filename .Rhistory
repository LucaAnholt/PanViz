g_copy
G_vis$nodes
G_vis$node
view(G_vis$nodes)
view(G_vis$edges)
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
view(G_vis$edges)
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
which(G_vis$nodes$type == "SNP")
G_vis$nodes$shape[which(G_vis$nodes$type == "SNP")]
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
G = g_copy
snp_index <- V(G)[grepl("SNP", V(G)$type)] #get graph indexes for snps
snp_inde
snp_index
distances(G, v = V(G)[snp_index], to = V(G), mode = "out", weights = NA)
snp_index
which(V(G) !%in% snp_index)
which(V(G) %in% snp_index)
!which(V(G) %in% snp_index)
V(G)[snp_index]
V(G)[-snp_index]
snp_index <- V(G)[grepl("SNP", V(G)$type)] #get graph indexes for snps
non_snp_index <- V(G)[-snp_index]
dm <- distances(G, v = V(G)[snp_index], to = V(G)[non_snp_index], mode = "out", weights = NA)
dm
library(shiny); runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
library(PanViz)
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
?PanViz::GWAS_catalog_tsv_to_dataframe()
?PanViz::GWAS_catalog_tsv_to_dataframe
PanViz::GWAS_catalog_tsv_to_dataframe
?PanViz::get_grouped_IMON()
?PanViz::get_IMON()
?PanViz
??PanViz
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
runApp('C:/Users/Luca Anholt/Desktop/R/PanViz/new approach/with_package.R')
library(PanViz)
df = PanViz::GWAS_catalog_tsv_to_dataframe("gwas-association-downloaded_2021-07-06-EFO_1000649.tsv")
head(df)
G = PanViz::get_IMON(df$snps, ego = 5, export_type = "graphml")
G
G_list = PanViz:::decompose_IMON(G)
G_list[[1]]
write_graph(G_list[[1]], file = "FC_ER_5.txt", format = "graphml")
library(PanViz)
df = PanViz::GWAS_catalog_tsv_to_dataframe("gwas-association-downloaded_2021-08-10-EFO_0005537-withChildTraits.tsv")
G = PanViz::get_IMON(df$snps, ego =5 , "graphml")
G
V(G)[grepl("SNP", V(G)$type)]
df = PanViz::GWAS_catalog_tsv_to_dataframe("gwas-association-downloaded_2021-08-10-EFO_0001360.tsv")
G = PanViz::get_IMON(df$snps, ego =5 , "graphml")
G
df = PanViz::GWAS_catalog_tsv_to_dataframe("gwas-association-downloaded_2021-08-10-EFO_0005537-withChildTraits.tsv")
G = PanViz::get_IMON(df$snps, ego =5 , "graphml")
G_list = PanViz:::decompose_IMON(G)
G_list[[1]]
G = G_list[[1]]
write_graph(G, "ER_negative_IMON_cut.txt", "graphml")
library(PanViz)
G = PanViz::GWAS_catalog_tsv_to_dataframe("gwas-association-downloaded_2021-08-02-EFO_0000555.tsv")
df = G
G = PanViz::get_IMON(df$snps, ego  =5 , "graphml")
G
G_list = PanViz:::decompose_IMON(G)
G = G_list[0]
G
G = G_list[1]
G
write_graph(G, "IBS_FC_IMON.txt", "graphml")
G
G = G_list[[1]]
write_graph(G, "IBS_FC_IMON.txt", "graphml")
G
library(PanViz)
G = read_graph("IBS_FC_C_IMON.graphml", "graphml")
G
V(G)$community
unique(V(G)$community)
source('~/.active-rstudio-document', echo=TRUE)
G = read_graph("IBS_FC_C_IMON.graphml", "graphml")
col_vector <- c("#4b58a2","#9dbf46","#6640a3","#46ca79","#9c2e87","#4d9f3b","#d86cca",
"#88c86b","#462875","#c1a830","#5982f0","#d6902c","#6f6cd3","#4d7b1f",
"#b873d8","#4ec287","#d24283","#4ad3b6","#d43f61","#1fe1fb","#bd3439",
"#2a9368","#d864b2","#7cbf76","#812862","#a2b356","#578ae2","#be6423",
"#619ade","#db9c4c","#9b87da","#1f5113","#d694dc","#3e7e3c","#93579c",
"#cdbc64","#952e56","#947d21","#db75a2","#747328","#ec605d","#8f541e",
"#d4697b","#d4955a","#912641","#ce5a3b","#8c242e","#ce7058","#812614",
"#d56467")
n <- length(unique(V(G)$community))
col_vector <- sample(col_vector, n)
col_vector
source('~/.active-rstudio-document', echo=TRUE)
for(i in seq_along(n)){
print(i)
}
n
source('~/.active-rstudio-document', echo=TRUE)
V(G)$community
for(i in 0:n){
print(i)
}
for(i in 0:n-1){
print(i)
}
for(i in 0:(n-1)){
print(i)
}
V(G)$community == 0
which(V(G)$community == 0)
V(G)[which(V(G)$community == 0)]
V(G)[which(V(G)$community == 0)]$col
V(G)[which(V(G)$community == 0)]$color
for(i in 0:(n-1)){
V(G)[which(V(G)$community == i)]$color <- col_vector[i+1]
}
V(G)$color
myformat <- function(G) {
layout.reingold.tilford(G, root = V(G)[grepl("SNP", V(G)$type)], flip.y = TRUE, circular = FALSE)
}
format <- myformat(G)
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
groupings <- factor(unique_group_names)
plot(G,
vertex.label.cex = 0.5,
vertex.size=3,
edge.arrow.size=.1,
vertex.label = NA,
vertex.color= adjustcolor(V(G)$col, alpha = 0.5),
edge.color = adjustcolor(E(G)$col, alpha = 0.5), 0.5,
edge.width = 1.5,
layout = format,
vertex.frame.width = 0.001
)
#
legend("topleft",bty = "n",
legend=levels(groupings),
fill=unique_group_cols, border=NA, cex = 0.75)
myformat <- function(G) {
layout.reingold.tilford(G, root = V(G)[grepl("SNP", V(G)$type)], flip.y = TRUE, circular = FALSE)
}
format <- myformat(G)
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
groupings <- factor(unique_group_names)
plot(G,
vertex.label.cex = 0.5,
vertex.size=3,
edge.arrow.size=.1,
vertex.label = NA,
vertex.color= V(G)$col,
edge.color = E(G)$col, 0.5,
edge.width = 1.5,
layout = format,
vertex.frame.width = 0.001
)
#
legend("topleft",bty = "n",
legend=levels(groupings),
fill=unique_group_cols, border=NA, cex = 0.75)
visNetwork::visIgraph(G)
visNetwork::visIgraph(G)
source('C:/Users/Luca Anholt/OneDrive - Imperial College London/MSc/Work/Element 3/Final MSc Project/Results/Structural Centrality/colouring_communities.R', echo=TRUE)
visNetwork::visIgraph(G) %>%
visNetwork::visHierarchicalLayout()
ordered_levels <- c("SNP", "GENE", "ENZYME","REACTION","RP","METABOLITE")
ordered_levels <- c("SNP", "GENE", "ENZYME","REACTION","RP","METABOLITE")
V(G)$level
V(G)$type
source('C:/Users/Luca Anholt/OneDrive - Imperial College London/MSc/Work/Element 3/Final MSc Project/Results/Structural Centrality/colouring_communities.R', echo=TRUE)
V(G)[which(V(G)$type == "SNP")]
V(G)[which(V(G)$type == "SNP")]$level = 1
V(G)[which(V(G)$type == "GENE")]$level = 2
V(G)[which(V(G)$type == "ENZYME")]$level = 3
V(G)[which(V(G)$type == "REACTION")]$level = 4
V(G)[which(V(G)$type == "RP")]$level = 5
V(G)[which(V(G)$type == "METABOLITE")]$level = 6
visNetwork::visIgraph(G) %>%
visNetwork::visHierarchicalLayout()
visNetwork::visIgraph(G) %>%
visNetwork::visHierarchicalLayout(direction = "LR")
visNetwork::visIgraph(G)
library(PanViz)
PanViz::GWAS_catalog_tsv_to_dataframe("gwas-association-downloaded_2021-08-02-EFO_0000555.tsv")
df = PanViz::GWAS_catalog_tsv_to_dataframe("gwas-association-downloaded_2021-07-06-EFO_1000649.tsv")
head(df)
sample_n(df, 10)
sample_n(df$snps, 10)
sample_n(df, 10)$snps
sample_n(df, 10)$snps
sample_n(df, 20)$snps
G = PanViz::get_IMON(sample_n(df, 20)$snps, ego = 5, export_type = "graphml")
G
G = PanViz::get_IMON(sample_n(df, 15)$snps, ego = 5, export_type = "graphml")
G
G = PanViz::get_IMON(sample_n(df, 10)$snps, ego = 5, export_type = "graphml")
G
G_list = PanViz:::decompose_IMON(G)
G_list[[0]]
G_list[[1]]
G <- G_list[[1]]
write_graph(G, "FC_ER_SMALL.txt", "graphml")
library(PanViz)
library(PanViz)
utils::news(package="PanViz")
source('C:/Users/Luca Anholt/Desktop/R/Package_2 - Copy/PanViz/R/adjl_to_G_grouped.R', echo=TRUE)
adjl_RP_C <- readRDS(paste0(getwd(), "/adjl_RP_C.Rds"))
adjl_RP_R <- readRDS(paste0(getwd(), "/adjl_RP_R.Rds"))
adjl_R_E <- readRDS(paste0(getwd(), "/adjl_R_E.Rds"))
adjl_G_E <- readRDS(paste0(getwd(), "/adjl_G_E.Rds"))
view(adjl_RP_C)
view(adjl_RP_R)
adjl_G_E <- readRDS("C:/Users/Luca Anholt/Desktop/R/Package_2 - Copy/PanViz/adjl_G_E.Rds")
view(adjl_G_E)
dim(adjl_G_E)
length(adjl_G_E)
adjl_G_E[1]
adjl_G_E[2]
adjl_G_E[3]
cwd()
getwd()
save(adjl_G_E, adjl_R_E, adjl_RP_C, adjl_RP_R, file = "KEGG_data.rda")
load(file = "KEGG_data.rda")
load(file = paste0(getwd(),"KEGG_data.rda"))
load(file = paste0(getwd(),"/KEGG_data.rda"))
adjl_RP_C[1]
adjl_RP_R[1]
adjl_R_E[1]
adjl_G_E[1]
##loading KEGG network data adjacency lists from working directory:
# adjl_RP_C <- readRDS(paste0(getwd(), "/adjl_RP_C.Rds"))
# adjl_RP_R <- readRDS(paste0(getwd(), "/adjl_RP_R.Rds"))
# adjl_R_E <- readRDS(paste0(getwd(), "/adjl_R_E.Rds"))
# adjl_G_E <- readRDS(paste0(getwd(), "/adjl_G_E.Rds"))
load(file = paste0(getwd(),"data/KEGG_data.rda"))
load(file = paste0(getwd(),"/data/KEGG_data.rda"))
library(PanViz)
library(PanViz)
library(PanViz)
library(PanViz)
library(PanViz)
library(PanViz)
getwd()
snps_test <- readRDS(paste0(getwd(), "/snp_list.Rds"))
snps_test <- readRDS(paste0(getwd(), "/data/snp_list.Rds"))
library(PanViz)
test <- PanViz::get_IMON(snps_test)
library(PanViz)
test <- PanViz::get_IMON(snps_test)
library(PanViz)
test <- PanViz::get_IMON(snps_test)
test
V(test)[1]
V(test)[[1]]
foo <- function(a, b, c){
return(list(a, b, c))
}
foo(1, 2, 3)
library(PanViz)
PanViz::Get_Kegg_Data(CPU = 2, sleep = 5)
library(PanViz)
load(file = "R/sysdata.rda")
PanViz::Get_Kegg_Data(CPU = 2, sleep = 5)
load(file = "R/sysdata.rda")
View(adjl_G_E)
View(Gene_Locations)
Gene_Locations[1]
Gene_Locations
PanViz::Get_Kegg_Data(CPU = 2, sleep = 5)
load(file = "R/sysdata.rda")
View(adjl_G_E)
dim(adjl_G_E)
dim()
type(adjl_G_E)
class(adjl_G_E)
class(adjl_G_E[[1]])
adjl_G_E[[1]]
test <- list(list(1,2,3), list(1,2,3))
test
test[[1]]
View(Gene_Locations)
Gene_Locations[[1]]
adjl_G_E[[1]]
view(adjl_G_E[[1]])
unlist(adjl_G_E)
load(file = "R/sysdata.rda")
adjl_RP_C <- adjl_RP_C[[1]]
adjl_RP_R <- adjl_RP_R[[1]]
adjl_R_E <- adjl_R_E[[1]]
adjl_G_E <- adjl_G_E[[1]]
view(adjl_G_E)
library(PanViz)
PanViz::Get_Kegg_Data(CPU = 2, sleep = 5)
load(file = "R/sysdata.rda")
View(Gene_Locations)
Get_Kegg_Data <- function(CPU = c(2,1), sleep = 5){
##Querying KEGG for metabolite, reaction and enzyme data:
data <<- PanViz:::retry(PanViz:::Reactions_Get_All(CPU = CPU, sleep = sleep), maxErrors = 3, sleep = sleep)
adjl_R_E <- data[[1]]
adjl_RP_C <- data[[2]]
adjl_RP_R <- data[[3]]
##Querying KEGG for gene data + query gene locations from NCBI
data <- PanViz:::retry(PanViz:::Genes_Get_All(CPU = CPU, sleep = sleep), maxErrors = 3, sleep = sleep)
adjl_G_E <- data[[1]]
Gene_Locations <- data[[2]]
##Querying compound names as hash:
compound_names_hash <-  PanViz:::retry(PanViz:::get_compound_hashmap(CPU = CPU, sleep = sleep), maxErrors = 3, sleep = sleep)
save(adjl_G_E, adjl_R_E, adjl_RP_C, adjl_RP_R, Gene_Locations, compound_names_hash, file = "R/sysdata.rda")
cat("Done! KEGG database successfully updated")
}
Get_Kegg_Data()
data <- PanViz:::retry(PanViz:::Reactions_Get_All(CPU = CPU, sleep = sleep), maxErrors = 3, sleep = sleep)
CPU = 2
sleep = 5
data <- PanViz:::retry(PanViz:::Reactions_Get_All(CPU = CPU, sleep = sleep), maxErrors = 3, sleep = sleep)
data
data[[1]]
test <- data[[1]]
test[1]
test
view(test)
test
View(test)
data[[1]]
data[[2]]
test = data[[2]]
View(test)
adjl_R_E <- data[[1]]
adjl_RP_C <- data[[2]]
adjl_RP_R <- data[[3]]
library(PanViz)
PanViz::Get_Kegg_Data()
load(file = "sysdata.rda")
load(file = "R/sysdata.rda")
View(adjl_G_E)
View(Gene_Locations)
snp_list <- readRDS("C:/Users/Luca Anholt/Desktop/R/Package_2 - Copy/PanViz/data/snp_list.Rds")
snp_list
PanViz::get_IMON(snp_list)
library(PanViz)
PanViz::get_IMON(snp_list)
load(file = "R/sysdata.rda")
library(PanViz)
PanViz::get_IMON(snp_list)
snp_list <- readRDS("C:/Users/Luca Anholt/Desktop/R/Package_2 - Copy/PanViz/data/snp_list.Rds")
PanViz::get_IMON(snp_list)
PanViz::get_IMON(snp_list, ego = 5, export_type = "igraph")
V(G)[[1]]
G = PanViz::get_IMON(snp_list, ego = 5, export_type = "igraph")
V(G)[[1]]
library(PanViz)
df <- PanViz::GWAS_catalog_tsv_to_dataframe("CopyOfgwas-association-downloaded_2021-09-13-EFO_1000649.tsv")
df <- PanViz::GWAS_catalog_tsv_to_dataframe("/data/CopyOfgwas-association-downloaded_2021-09-13-EFO_1000649.tsv")
df <- PanViz::GWAS_catalog_tsv_to_dataframe("getwd()/data/CopyOfgwas-association-downloaded_2021-09-13-EFO_1000649.tsv")
df <- PanViz::GWAS_catalog_tsv_to_dataframe(paste0(getwd(), "/data/CopyOfgwas-association-downloaded_2021-09-13-EFO_1000649.tsv")
)
paste0(getwd(), "/data/CopyOfgwas-association-downloaded_2021-09-13-EFO_1000649.tsv"
)
PanViz::GWAS_catalog_tsv_reader( "C:/Users/Luca Anholt/Desktop/R/Package_2 - Copy/PanViz/data/CopyOfgwas-association-downloaded_2021-09-13-EFO_1000649.tsv")
file =  "C:/Users/Luca Anholt/Desktop/R/Package_2 - Copy/PanViz/data/CopyOfgwas-association-downloaded_2021-09-13-EFO_1000649.tsv"
file <- as.data.frame(fread(file)) #read tsv as dataframe
file
file =  "C:/Users/Luca Anholt/Desktop/R/Package_2 - Copy/PanViz/data/CopyOfgwas-association-downloaded_2021-09-13-EFO_1000649.tsv"
file =  "C:/Users/Luca Anholt/Desktop/R/Package_2 - Copy/PanViz/CopyOfgwas-association-downloaded_2021-09-13-EFO_1000649.tsv"
file <- as.data.frame(fread(file)) #read tsv as dataframe
"C:\Users\Luca Anholt\Desktop\R\Package_2 - Copy\PanViz\gwas-association-downloaded_2021-09-13-EFO_1000649.tsv"
file =  "C:/Users/Luca Anholt/Desktop/R/Package_2 - Copy/PanViz/gwas-association-downloaded_2021-09-13-EFO_1000649.tsv"
file <- as.data.frame(fread(file)) #read tsv as dataframe
file
file =  "C:/Users/Luca Anholt/Desktop/R/Package_2 - Copy/PanViz/gwas-association-downloaded_2021-09-13-EFO_1000649.tsv"
df <- PanViz::GWAS_catalog_tsv_to_dataframe(file)
head(df)
G1 <- PanViz::get_IMON(df$snps, ego = 5, export = "graphml")
G
G1
G1 <- PanViz::get_IMON(df$snps, ego = 7, export = "graphml")
G1
which(V(G1)$type %in% "METABOLITE")
V(G1)[which(V(G1)$type %in% "METABOLITE")]
V(G1)[which(V(G1)$type %in% "METABOLITE")]$name
V(G1)[which(V(G1)$type %in% "METABOLITE")]$id
V(G1)[which(V(G1)$type %in% "METABOLITE")][[1]]
V(G1)[which(V(G1)$type %in% "METABOLITE")]$ID
V(G1)[which(V(G1)$type %in% "GENE")]$ID
V(G1)[which(V(G1)$type %in% "SNP")]$ID
library(PanViz)
PanViz::]
df = PanViz::GWAS_catalog_tsv_to_dataframe(file = "C:/Users/Luca Anholt/Desktop/R/Package_2 - Copy/PanViz/data")
df = PanViz::GWAS_catalog_tsv_to_dataframe(file = "C:/Users/Luca Anholt/Desktop/R/Package_2 - Copy/PanViz/data/gwas-association-downloaded_2021-09-13-EFO_1000649.tsv")
df
PanViz::get_grouped_IMON(dataframe = df, groupby = "studies", ego = 5, export_type = "igraph", colour_groups = TRUE)
G <- PanViz::get_grouped_IMON(dataframe = df, groupby = "studies", ego = 5, export_type = "igraph")
G
?usethis::use_data
library(PanViz)
BiocManager::install("BiocStyle")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocStyle")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.14")
install.packages("BiocManager")
sessionInfo()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocStyle")
install.packages("roxygen2")
install.packages("tidyverse")
BiocManager::install("KEGGREST")
install.packages("devtools")
install.packages("svMisc")
install.packages("futile.logger")
install.packages("foreach")
install.packages("doSNOW")
install.packages("easycsv")
install.packages("rentrez")
install.packages("igraph")
install.packages("RColorBrewer")
install.packages("hash")
install.packages("data.table")
install.packages("colorspace")
install.packages("igraph")
library(PanViz)
PanViz::get_IMON(snp_list = PanViz::er_snp_vector, ego = 5, save_file = FALSE)]
PanViz::get_IMON(snp_list = PanViz::er_snp_vector, ego = 5, save_file = FALSE)
df <- PanViz::GWAS_catalog_tsv_to_dataframe(file = paste0(find.package("PanViz", lib.loc=NULL, quiet = TRUE), "/data/gwas-association-downloaded_2021-09-13-EFO_1000649.tsv"))
PanViz::get_grouped_IMON(dataframe = df, groupby = "unexpected_name", ego = 5, save_file = FALSE, colour_groups = FALSE)
groupby = "£"
groupby %in% c("studies", "trais")
as.integer(groupby %in% c("studies", "trais")) == 0
library(PanViz)
devtools::test()
devtools::test()
devtools::test()
PanViz::get_IMON(snp_list = PanViz::er_snp_vector, ego = 5, save_file = FALSE)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
df <- data.frame(snps = c("rs3454594054594", "rs4545490954"), studies = c("study1", "study2"), traits = c("trait1", "trait1"))
PanViz::get_grouped_IMON(dataframe = df, groupby = "studies", ego = 5, save_file = FALSE)
class(iris)
devtools::test()
grep(pattern = ".tsv", x = "gwas-association-downloaded_2021-09-13-EFO_1000649.tsv")
grep(pattern = ".tsv", x = "gwas-association-downloaded_2021-09-13-EFO_1000649.csv")
devtools::test()
devtools::test()
PanViz::GWAS_catalog_tsv_to_dataframe(file = paste0(find.package("PanViz", lib.loc=NULL, quiet = TRUE), "/data/gwas-association-downloaded_2021-09-13-EFO_1000649.tsv"))
PanViz::GWAS_catalog_tsv_to_dataframe(file = paste0(find.package("PanViz", lib.loc=NULL, quiet = TRUE), "/data/gwas-association-downloaded_2021-09-13-EFO_1000649.csv"))
library(PanViz)
PanViz::GWAS_catalog_tsv_to_dataframe(file = paste0(find.package("PanViz", lib.loc=NULL, quiet = TRUE), "/data/gwas-association-downloaded_2021-09-13-EFO_1000649.csv"))
paste0(find.package("PanViz", lib.loc=NULL, quiet = TRUE), "/data/gwas-association-downloaded_2021-09-13-EFO_1000649.csv"
)
paste0(find.package("PanViz", lib.loc=NULL, quiet = TRUE), "/data/gwas-association-downloaded_2021-09-13-EFO_1000649.csv")
testtest <- paste0(find.package("PanViz", lib.loc=NULL, quiet = TRUE), "/data/gwas-association-downloaded_2021-09-13-EFO_1000649.csv")
grep(pattern = ".tsv", x = testtest) != 1
testtest
grep(pattern = ".tsv", x = testtest)
integer(grep(pattern = ".tsv", x = testtest))
length(grep(pattern = ".tsv", x = testtest))
length(grep(pattern = ".tsv", x = "TEST.tsv"))
length(grep(pattern = ".tsv", x = "TEST.csv"))
library(PanViz)
PanViz::GWAS_catalog_tsv_to_dataframe(file = testtest)
devtools::test()
devtools::test()
PanViz::GWAS_catalog_tsv_to_dataframe(file = paste0(find.package("PanViz", lib.loc=NULL, quiet = TRUE), "/data/gwas-association-downloaded_2021-09-13-EFO_1000649.tsv"))
devtools::test()
library(PanViz)
library(PanViz)
devtools::test()
